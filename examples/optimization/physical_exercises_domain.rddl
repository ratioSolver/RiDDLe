class PhysicalExerciseStateVariable : StateVariable {

    predicate UprightRow(real id) {
        duration >= 10.0;
    }

    predicate FrontShoulderRaise(real id) {
        duration >= 10.0;
    }

    predicate BicepsCurl(real id) {
        duration >= 10.0;
    }

    predicate ShoulderT(real id) {
        duration >= 10.0;
    }

    predicate StandingTricepsExtension(real id) {
        duration >= 10.0;
    }

    predicate OverheadPress(real id) {
        duration >= 10.0;
    }

    predicate PushUps(real id) {
        duration >= 10.0;
    }

    predicate StandingHamstringsCurl(real id) {
        duration >= 10.0;
    }

    predicate StandingCalfRaises(real id) {
        duration >= 10.0;
    }

    predicate ChairSquats(real id) {
        duration >= 10.0;
    }

    predicate SupineHipLifts(real id) {
        duration >= 10.0;
    }

    predicate SideHipRaise(real id) {
        duration >= 10.0;
    }

    predicate AbdominalCrunch(real id) {
        duration >= 10.0;
    }

    predicate BackExtensions(real id) {
        duration >= 10.0;
    }
}

predicate UpperBodyExercise(real id) : Interval {
    {
        goal ur = new sv.UprightRow(id: id);
        ur.start >= start; ur.end <= end;
    } or {
        goal fsr = new sv.FrontShoulderRaise(id: id);
        fsr.start >= start; fsr.end <= end;
    } or {
        goal bc = new sv.BicepsCurl(id: id);
        bc.start >= start; bc.end <= end;
    } or {
        goal st = new sv.ShoulderT(id: id);
        st.start >= start; st.end <= end;
    } or {
        goal ste = new sv.StandingTricepsExtension(id: id);
        ste.start >= start; ste.end <= end;
    } or {
        goal op = new sv.OverheadPress(id: id);
        op.start >= start; op.end <= end;
    } or {
        goal pu = new sv.PushUps(id: id);
        pu.start >= start; pu.end <= end;
    }
}

predicate LowerBodyExercise(real id) : Interval {
    {
        goal shc = new sv.StandingHamstringsCurl(id: id);
        shc.start >= start; shc.end <= end;
    } or {
        goal scr = new sv.StandingCalfRaises(id: id);
        scr.start >= start; scr.end <= end;
    } or {
        goal cs = new sv.ChairSquats(id: id);
        cs.start >= start; cs.end <= end;
    } or {
        goal shl = new sv.SupineHipLifts(id: id);
        shl.start >= start; shl.end <= end;
    } or {
        goal shr = new sv.SideHipRaise(id: id);
        shr.start >= start; shr.end <= end;
    }
}

predicate LowerBackAbdominalExercise(real id) : Interval {
    {
        goal ac = new sv.AbdominalCrunch(id: id);
        ac.start >= start; ac.end <= end;
    } or {
        goal be = new sv.BackExtensions(id: id);
        be.start >= start; be.end <= end;
    }
}

predicate PhysicalExercise(real id) : Interval {
    goal ube = new UpperBodyExercise(id: id);
    ube.start >= start; ube.end <= end;
    goal lbe = new LowerBodyExercise(id: id);
    lbe.start >= start; lbe.end <= end;
    goal lbae = new LowerBackAbdominalExercise(id: id);
    lbae.start >= start; lbae.end <= end;
}

predicate NoOp(real id, real lookahead) {
    {
        lookahead == 0.0;
    } or {
        goal noop = new NoOp(id: id, lookahead : lookahead - 1.0);
    }
}
